galaxy:
  url: "http://galaxy.uni.andreas-sk.de"
  admin_key: "c67c46b28413ce46c6d5e0f547e2462b"
  shed_install: false
  ssh_user: ubuntu
  ssh_key: /Users/askorczyk/Dropbox/Studium/5-WS18-19/Bachelorprojekt - Galaxy/bwcloud.cert
  galaxy_root_path: /srv/galaxy
  galaxy_config_dir: /srv/galaxy/server/config
  galaxy_user: galaxy

influxdb:
  host: influxdb.uni.andreas-sk.de
  port: 8086
  username: glx_benchmarker_user
  password: 8f9uas0923ria0fc0932rfau903f
  db_name: glx_benchmarker

destinations:
  - name: LocalPulsar
    type: PulsarMQ
    amqp_url: "pyamqp://pulsar_test:password@rabbitmq.uni.andreas-sk.de:5672//"
    host: pulsar.uni.andreas-sk.de
    host_user: centos
    ssh_key: /Users/askorczyk/Dropbox/Studium/5-WS18-19/Bachelorprojekt - Galaxy/bwcloud.cert
    tool_dependency_dir: /data/share/tools
    jobs_directory_dir: /data/share/staging
    persistence_dir: /data/share/persisted_data
  - name: Freiburg
    type: PulsarMQ
    amqp_url: "pyamqp://pulsar_test:password@rabbitmq.uni.andreas-sk.de:5672//"
  - name: Italy
    type: PulsarMQ
    amqp_url: "pyamqp://pulsar_test:password@rabbitmq.uni.andreas-sk.de:5672//"
  - name: CondorManager
    type: Condor
    host: pulsar.uni.andreas-sk.de
    host_user: centos
    ssh_key: /Users/askorczyk/Dropbox/Studium/5-WS18-19/Bachelorprojekt - Galaxy/bwcloud.cert
    jobs_directory_dir: /home/centos/jobs
#  - name: CondorWithGalaxy
#    type: GalaxyCondor

workflows:
  - name: gromacs
    type: Galaxy
    path: workflow-testing/training/computational-chemistry/bio3danalysis/gromacs.ga
    description: BlaBlaBla
  - name: mapping_by_sequencing
    type: Galaxy
    path: workflow-testing/training/variant-analysis/mapping-by-sequencing/mapping_by_sequencing.ga
    description: BlaBlaHahaha
  - name: adaboost
    type: Galaxy
    path: workflow-testing/sklearn/adaboost/adaboost.ga

benchmarks:
#  - name: ColdvsWarm
#    type: ColdvsWarm
#    destinations:
#      - LocalPulsar
#    runs_per_workflow: 2
#    workflows:
#      - adaboost
#      - gromacs
#      - mapping_by_sequencing
#    cold_pre_task:
#      type: "ansible-playbook"
#      playbook: "coldwarm_pretask.yml"
#    post_task:
#      type: "ansible-playbook"
#      playbook: "cleanup_pulsar.yml"
#    warm_pre_task:
#      type: "ansible-playbook"
#      playbook: "cleanup-pulsar.yml"
#  - name: DestinationComparison
#    type: DestinationComparison
##    pre_task:
##      type: "ansible-playbook"
##      playbook: "cleanup-pulsar.yml"
##    post_task:
##      - type: "shell-script"
##      - script: "./benchmark2_post-task.sh" # Call some script after ending benchmark (like for cleaning up)
#    destinations:
#      - LocalPulsar
##      - Freiburg
##      - Italy
#    runs_per_workflow: 1
#    workflows:
#      - adaboost
#      - gromacs
#      - mapping_by_sequencing
  - name: BurstBenchmark
    type: Burst
    runs_per_workflow: 500
    burst_rate: 100
    destinations:
      - LocalPulsar
    workflows:
      - adaboost
