---
- name: "Taskgroup: run fio and check result, potential retry"
  block:
  - name: Increment the retry count
    set_fact:
      retry_count: "{{ 0 if retry_count is undefined else retry_count | int + 1 }}"

  - name: Run fio container
    become: true
    community.docker.docker_container:
      name: fio
      image: galaxybenchmarker/tool-fio
      detach: false
      cleanup: true
      volumes:
        - "{{ tempdir.path }}:/results:rw"
        - "{{ fio_dir }}/fio_in_progress:/mnt/volume_under_test:rw"
      working_dir: /mnt/volume_under_test
      command: [
        "--bs={{ fio_blocksize }}",
        "--direct=1",
        "--end_fsync=1",
        "--filename=testfile.fio",
        "--group_reporting",
        "--iodepth={{ fio_iodepth }}",
        "--ioengine={{ fio_ioengine }}",
        "--name={{ fio_jobname }}",
        "--numjobs={{ fio_numjobs }}",
        "--output", "/results/{{ fio_result_file }}",
        "--output-format=json",
        "{% if fio_refill_buffers|bool %}--refill_buffers{% endif %}",
        "{% if fio_time_based|bool %}--runtime={{ fio_runtime_in_s }}{% endif %}",
        "--rw={{ fio_mode }}",
        "--size={{ fio_filesize }}",
        "{% if fio_time_based|bool %}--time_based{% endif %}",
        "{% if fio_mode in ['read', 'randread'] %}--create_on_open=1{% endif %}",
        "{% if fio_ramptime_in_s %}--ramp_time={{ fio_ramptime_in_s }}{% endif%}",
      ]
    register: fio_results_2
    # IRODSFS generates errors during cleanup
    ignore_errors: true

  - name: debug
    debug: var=fio_results_2

  - name: Check fio result, fail when bandwidth=0
    command: 'grep -E "bw_mean\" : [1-9]" {{ tempdir.path }}/{{ fio_result_file }}'

  rescue:
    - fail:
        msg: Maximum retries of grouped tasks reached
      when: retry_count | int == 5

    - debug:
        msg: "Fio failed, let's give it another shot"

    - include_tasks: run_fio_and_check_result.yml